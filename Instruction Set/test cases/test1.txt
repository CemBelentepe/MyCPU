// Reverses an array
#define size 11

arr1:
    db 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
arr2:
    space 10

#align 2
_start:
    mov r2, #size   // r2 is the source index
    mov r3, #0      // r3 is the destination index
    mov r6, #L(arr1) // r7,r6 is arr1
    mov r7, #H(arr1)
    mov r4, #L(arr2) // r7,r6 is arr2
    mov r5, #H(arr2)

.loop:
    sub r2, #1
    movd ar, r7, r6
    ldr r0, [ar, r2]
    movd ar, r5, r4
    str r0, [ar, r3]
    add r3, #1
    cmp r2, #0
    bgt .loop

.end:
    b   .end
