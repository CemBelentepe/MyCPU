00000000    // mov arl, #0x00
01001011
11000000    // mov arh, #0xC0
01001111
00000000    // mov r7, #0
01000111
11000001    // str r7, [AR, #1]
00011001
00000001    // mov r7, #1
01000111
00000000    // mov r0, #0
01000000
00000000    // mov r1, #0
01000001
00000000    // mov r2, #0
01000010
00000000    // mov r5, #0
01000101
00000000    // mov r6, #0
01000110
01000110    // str r5, [AR, #6]
00011001
00000010    // str r0, [AR, #2]
00011000
01000011    // str r1, [AR, #3]
00011000
10000100    // str r2, [AR, #4]
00011000
10000111    // str r6, [AR, #7]
00011001
01110000    // str r7, [AR]
00001000
00000001    // add r6, #1
10000110
11110000    // cmp r6, #240
01010110
11111000    // bne .each_col
00100011
00000000    // mov r6, #0
01000110
00000001    // add r0, #1
10000000
01001000    // add r1, r1, r0
01100000
00000100    // add r2, #4
10000010
00000001    // add r5, #1
10000101
11110001    // b   .loop
00110011
